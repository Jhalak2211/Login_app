provider "aws" {
  region = "us-east-1"
}
# Load SSH key files generated by create_terraform_key.sh
resource "aws_key_pair" "dev_key" {
  key_name   = "dev_key"
  public_key = file("${path.module}/id_rsa.pub")
}
resource "local_file" "private_key" {
  content  = file("${path.module}/id_rsa")
  filename = "${path.module}/terraform-key.pem"
}
# Security Group for all instances
resource "aws_security_group" "dev_sg" {
  name        = "dev_sg"
  description = "Allow SSH, HTTP, Docker Swarm, and PostgreSQL"
  ingress {
    description = "SSH"
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
  ingress {
    description = "HTTP"
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
  ingress {
    description = "Docker Swarm"
    from_port   = 2377
    to_port     = 2377
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
  ingress {
    description = "PostgreSQL"
    from_port   = 5432
    to_port     = 5432
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
  egress {
    description = "Allow all outbound traffic"
    from_port   = 0
    to_port     = 0
 protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
}
# AMI and instance type
variable "ami_id" {
  default = "ami-0c94855ba95c71c99" # Ubuntu 20.04 LTS (Free Tier)
}
variable "instance_type" {
  default = "t2.micro"
}
resource "aws_instance" "controller" {
  ami           = var.ami_id
  instance_type = var.instance_type
  key_name      = aws_key_pair.dev_key.key_name
  security_groups = [aws_security_group.dev_sg.name]
  tags = {
    Name = "Controller"
  }
}
resource "aws_instance" "manager" {
  ami           = var.ami_id
  instance_type = var.instance_type
  key_name      = aws_key_pair.dev_key.key_name
  security_groups = [aws_security_group.dev_sg.name]
  tags = {
    Name = "SwarmManager"
  }
}
resource "aws_instance" "worker_a" {
  ami           = var.ami_id
  instance_type = var.instance_type
  key_name      = aws_key_pair.dev_key.key_name
  security_groups = [aws_security_group.dev_sg.name]
  tags = {
    Name = "SwarmWorkerA"
  }
}
resource "aws_instance" "worker_b" {
  ami           = var.ami_id
  instance_type = var.instance_type
  key_name      = aws_key_pair.dev_key.key_name
  security_groups = [aws_security_group.dev_sg.name]
  tags = {
    Name = "SwarmWorkerB"
  }
}
resource "aws_eip" "eip_controller" {
  instance = aws_instance.controller.id
  domain   = "vpc"
}
resource "aws_eip" "eip_manager" {
  instance = aws_instance.manager.id
  domain   = "vpc"
}
resource "aws_eip" "eip_worker_a" {
  instance = aws_instance.worker_a.id
  domain   = "vpc"
}
resource "aws_eip" "eip_worker_b" {
  instance = aws_instance.worker_b.id
  domain   = "vpc"
}
# Outputs
output "controller_ip" {
  value = aws_eip.eip_controller.public_ip
}
output "manager_ip" {
  value = aws_eip.eip_manager.public_ip
}
output "worker_a_ip" {
  value = aws_eip.eip_worker_a.public_ip
}
output "worker_b_ip" {
  value = aws_eip.eip_worker_b.public_ip
}

